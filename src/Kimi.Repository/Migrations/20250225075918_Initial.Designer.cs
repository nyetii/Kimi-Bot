// <auto-generated />
using System;
using Kimi.Repository;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Kimi.Repository.Migrations
{
    [DbContext(typeof(KimiDbContext))]
    [Migration("20250225075918_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.10");

            modelBuilder.Entity("Kimi.Repository.Models.DailyScore", b =>
                {
                    b.Property<ulong>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("TEXT");

                    b.Property<ulong>("GuildId")
                        .HasColumnType("INTEGER");

                    b.Property<uint>("MessageCount")
                        .HasColumnType("INTEGER");

                    b.Property<uint>("Score")
                        .HasColumnType("INTEGER");

                    b.Property<ulong>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("GuildId");

                    b.HasIndex("UserId", "GuildId", "Date")
                        .IsUnique();

                    b.ToTable("DailyScores");
                });

            modelBuilder.Entity("Kimi.Repository.Models.Guild", b =>
                {
                    b.Property<ulong>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Guilds");
                });

            modelBuilder.Entity("Kimi.Repository.Models.GuildUser", b =>
                {
                    b.Property<ulong>("GuildId")
                        .HasColumnType("INTEGER");

                    b.Property<ulong>("UserId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("LastMessage")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nickname")
                        .HasMaxLength(32)
                        .HasColumnType("TEXT");

                    b.HasKey("GuildId", "UserId");

                    b.HasIndex("UserId");

                    b.HasIndex("GuildId", "UserId")
                        .IsUnique();

                    b.ToTable("GuildUsers");
                });

            modelBuilder.Entity("Kimi.Repository.Models.Profile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Default")
                        .HasColumnType("INTEGER");

                    b.Property<int>("StatusActivityType")
                        .HasColumnType("INTEGER");

                    b.Property<string>("StatusMessage")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<int>("StatusType")
                        .HasColumnType("INTEGER");

                    b.Property<string>("StatusUrl")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Default");

                    b.ToTable("Profiles");

                    b.HasData(
                        new
                        {
                            Id = -1,
                            Default = true,
                            StatusActivityType = 4,
                            StatusMessage = "",
                            StatusType = 1
                        });
                });

            modelBuilder.Entity("Kimi.Repository.Models.User", b =>
                {
                    b.Property<ulong>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateOnly?>("Birthday")
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Kimi.Repository.Models.DailyScore", b =>
                {
                    b.HasOne("Kimi.Repository.Models.Guild", "Guild")
                        .WithMany("DailyScores")
                        .HasForeignKey("GuildId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Kimi.Repository.Models.User", "User")
                        .WithMany("DailyScores")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Guild");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Kimi.Repository.Models.GuildUser", b =>
                {
                    b.HasOne("Kimi.Repository.Models.Guild", "Guild")
                        .WithMany("GuildUsers")
                        .HasForeignKey("GuildId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Kimi.Repository.Models.User", "User")
                        .WithMany("GuildUsers")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Guild");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Kimi.Repository.Models.Guild", b =>
                {
                    b.Navigation("DailyScores");

                    b.Navigation("GuildUsers");
                });

            modelBuilder.Entity("Kimi.Repository.Models.User", b =>
                {
                    b.Navigation("DailyScores");

                    b.Navigation("GuildUsers");
                });
#pragma warning restore 612, 618
        }
    }
}
